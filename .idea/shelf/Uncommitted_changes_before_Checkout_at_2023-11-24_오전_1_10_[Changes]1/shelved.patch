Index: JAVATEAMPROJECT/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import views.DefaultFrame;\r\nimport views.PswdFindView;\r\n\r\nimport java.awt.*;\r\nimport javax.swing.*;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        DefaultFrame win = new DefaultFrame();\r\n        win.setSize(1920,1080);\r\n        win.setVisible(true);\r\n        win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        win.add(new PswdFindView());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JAVATEAMPROJECT/src/Main.java b/JAVATEAMPROJECT/src/Main.java
--- a/JAVATEAMPROJECT/src/Main.java	
+++ b/JAVATEAMPROJECT/src/Main.java	
@@ -1,16 +1,15 @@
 import views.DefaultFrame;
+import views.ProductListCartView;
 import views.PswdFindView;
 
-import java.awt.*;
-import javax.swing.*;
-
 public class Main {
     public static void main(String[] args) {
         DefaultFrame win = new DefaultFrame();
-        win.setSize(1920,1080);
-        win.setVisible(true);
-        win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-
+        win.setSize(1800, 900);
         win.add(new PswdFindView());
+        win.setDefaultCloseOperation(3);
+        win.setVisible(true);
+
+
     }
 }
\ No newline at end of file
Index: JAVATEAMPROJECT/src/custom_component/DefaultFont.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package custom_component;\r\n\r\nimport java.awt.*;\r\n\r\npublic class DefaultFont extends Font{\r\n    public static final String NAME=\"맑은고딕\";\r\n    public static final int STYLE = Font.TRUETYPE_FONT;\r\n    public static final int SIZE = 50;\r\n\r\n\r\n    public DefaultFont(){\r\n        super(NAME, STYLE, SIZE);\r\n    }\r\n\r\n    public DefaultFont(int size) {\r\n        super(NAME, STYLE, SIZE);\r\n    }\r\n\r\n    public DefaultFont(String name){\r\n        super(name, STYLE, SIZE);\r\n    }\r\n\r\n    public DefaultFont(int size, int style){\r\n        super(NAME, style, size);\r\n    }\r\n\r\n    public DefaultFont(String name, int size, int style){\r\n        super(name, style, size);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JAVATEAMPROJECT/src/custom_component/DefaultFont.java b/JAVATEAMPROJECT/src/custom_component/DefaultFont.java
--- a/JAVATEAMPROJECT/src/custom_component/DefaultFont.java	
+++ b/JAVATEAMPROJECT/src/custom_component/DefaultFont.java	
@@ -13,7 +13,7 @@
     }
 
     public DefaultFont(int size) {
-        super(NAME, STYLE, SIZE);
+        super(NAME, STYLE, size);
     }
 
     public DefaultFont(String name){
Index: JAVATEAMPROJECT/src/views/DefaultFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package views;\r\n\r\n\r\nimport java.awt.*;\r\nimport javax.swing.*;\r\n\r\npublic class DefaultFrame extends JFrame{\r\n    private Container cp;\r\n    private JPanel top;\r\n    private JButton homeBtn;\r\n    private JLabel timeLb, titleLb;\r\n\r\n    public DefaultFrame() {\r\n        cp = getContentPane();\r\n\r\n        top = new JPanel();\r\n        top.setLayout(new BorderLayout());\r\n\r\n        homeBtn = new JButton(\"처음으로\");\r\n        JPanel btnP = new JPanel();\r\n        btnP.add(homeBtn);\r\n        homeBtn.setPreferredSize(new Dimension(150, 80));\r\n        timeLb = new JLabel(\"날짜\");\r\n\r\n        //top-Center\r\n        titleLb = new JLabel(new ImageIcon(\"src/product_list/images/title2.png\"));\r\n\r\n\r\n        top.add(btnP, BorderLayout.WEST);\r\n        top.add(titleLb, BorderLayout.CENTER);\r\n        top.add(timeLb, BorderLayout.EAST);\r\n\r\n\r\n        cp.add(top, BorderLayout.NORTH);\r\n    }\r\n\r\n    public Component add(Component c) {\r\n        cp.add(c, BorderLayout.CENTER);\r\n        return c;\r\n    }\r\n\r\n    public static GridBagConstraints easyGridBagConstraint(int x, int y, int weightX, int weightY) {\r\n        GridBagConstraints gbc = new GridBagConstraints();\r\n        gbc.gridx = x;\r\n        gbc.gridy = y;\r\n        gbc.weightx = weightX;\r\n        gbc.weighty = weightY;\r\n        gbc.fill = GridBagConstraints.BOTH;\r\n\r\n        return gbc;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JAVATEAMPROJECT/src/views/DefaultFrame.java b/JAVATEAMPROJECT/src/views/DefaultFrame.java
--- a/JAVATEAMPROJECT/src/views/DefaultFrame.java	
+++ b/JAVATEAMPROJECT/src/views/DefaultFrame.java	
@@ -5,12 +5,14 @@
 import javax.swing.*;
 
 public class DefaultFrame extends JFrame{
+    //public static final int WIDTH_
     private Container cp;
     private JPanel top;
     private JButton homeBtn;
     private JLabel timeLb, titleLb;
 
     public DefaultFrame() {
+
         cp = getContentPane();
 
         top = new JPanel();
@@ -30,7 +32,6 @@
         top.add(titleLb, BorderLayout.CENTER);
         top.add(timeLb, BorderLayout.EAST);
 
-
         cp.add(top, BorderLayout.NORTH);
     }
 
@@ -39,10 +40,12 @@
         return c;
     }
 
-    public static GridBagConstraints easyGridBagConstraint(int x, int y, int weightX, int weightY) {
+    public static GridBagConstraints easyGridBagConstraint(int x, int y, double weightX, double weightY) {
         GridBagConstraints gbc = new GridBagConstraints();
         gbc.gridx = x;
         gbc.gridy = y;
+        //gbc.gridwidth = 1;
+        //gbc.gridheight = 1;
         gbc.weightx = weightX;
         gbc.weighty = weightY;
         gbc.fill = GridBagConstraints.BOTH;
Index: JAVATEAMPROJECT/src/views/ProductListCartView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JAVATEAMPROJECT/src/views/ProductListCartView.java b/JAVATEAMPROJECT/src/views/ProductListCartView.java
new file mode 100644
--- /dev/null	
+++ b/JAVATEAMPROJECT/src/views/ProductListCartView.java	
@@ -0,0 +1,149 @@
+package views;
+
+import custom_component.DefaultFont;
+import dao.ProductDAO;
+
+import java.awt.*;
+import javax.swing.*;
+
+
+class ProductList extends JPanel{
+    public static final int CATEGORY_NUM = 5;
+    public static final String[] CATEGORY_NAME = {
+            "곡", "커피", "논-커피", "베버리지", "티"
+    };
+    ProductCategoryList[] list;
+    public ProductList(){
+        this.setLayout(new BorderLayout());
+        list = new ProductCategoryList[CATEGORY_NUM];
+        JTabbedPane jtp = new JTabbedPane();
+
+        for(int i = 0; i < CATEGORY_NUM; i++) {
+            JLabel tmp = new JLabel(CATEGORY_NAME[i]);
+            tmp.setPreferredSize(new Dimension(100, 30));
+            jtp.add(list[i], "");
+            jtp.setTabComponentAt(i, tmp);
+        }
+
+        this.add(jtp);
+    }
+
+}
+class ProductCart extends JPanel{
+    JPanel top, center, btm;
+    JScrollPane jsp;
+    public ProductCart(){
+        this.setLayout(new BorderLayout());
+        //top
+        top = new JPanel();
+        JLabel listLb = new JLabel("장바구니 리스트");
+        listLb.setFont(new DefaultFont(20,Font.TRUETYPE_FONT));
+        top.add(listLb);
+        this.add(top, BorderLayout.NORTH);
+
+        //center
+        center = new JPanel();
+        center.setLayout(new BoxLayout(center, BoxLayout.Y_AXIS));
+
+        jsp = new JScrollPane(center);
+        add(jsp);
+
+        //bottom
+        btm = new JPanel();
+        btm.setLayout(new GridLayout(2, 1));
+        JPanel btmDown, btmUp;
+
+            //bottom-1
+        btmUp = new JPanel();
+        JLabel totalLb;
+        totalLb = new JLabel("Total : 0원");
+        btmUp.add(totalLb);
+
+
+            //bottom-2
+        JButton buyBtn, rmBtn;
+        btmDown = new JPanel();
+        buyBtn = new JButton("구매");
+        rmBtn = new JButton("비우기");
+        btmDown.add(buyBtn);
+        btmDown.add(rmBtn);
+
+        btm.add(btmUp);
+        btm.add(btmDown);
+        this.add(btm, BorderLayout.SOUTH);
+        //add("x");
+    }
+
+    /*!add 수정에정!*/
+    public void add(String code){
+        //원래를 DB에서 객체를 받아오고 싶지만 DB 구현이 안되어 있음으로
+        //임시로 구현
+        ProductDAO p = new ProductDAO("C05", "americano(ice)",
+                "coffee", 10, false, 2000, 400,"실패");
+
+        //image
+        ImageIcon ii = new ImageIcon("src/images/americano(ice).png");
+        ImageIcon si;
+        si = new ImageIcon(ii.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));
+
+        JPanel detail = new JPanel();
+        //right
+        JLabel imageLb = new JLabel(si);
+
+        //left
+        JPanel left = new JPanel();
+        left.setLayout(new GridLayout(3, 1));
+        left.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
+
+        //left-1
+        JLabel nameLb = new JLabel(p.getName());
+        nameLb.setFont(new DefaultFont(10));
+        left.add(nameLb);
+
+        //left-2
+        JLabel priceLb = new JLabel(p.getSellPrice() + "원");
+        priceLb.setFont(new DefaultFont(10));
+        left.add(priceLb);
+
+        //JPanel
+        detail.add(imageLb);
+        detail.add(left);
+
+        //center
+        center.add(detail);
+    }
+}
+class ProductCategoryList extends JPanel{
+
+}
+
+class ProductPanel extends JPanel{
+
+}
+
+class ProductCartPanel extends JPanel{
+
+}
+
+
+public class ProductListCartView extends JPanel {
+    private ProductList pl;
+    private ProductCart pc;
+
+
+    public ProductListCartView() {
+        this.setLayout(new GridBagLayout());
+        pl = new ProductList();
+        pc = new ProductCart();
+
+        pl.setBackground(Color.red);
+        pc.setBackground(Color.orange);
+
+        pl.setBorder(BorderFactory.createEmptyBorder(30, 30, 30, 15));
+        pc.setBorder(BorderFactory.createEmptyBorder(30, 15, 30, 30));
+        add(pl, DefaultFrame.easyGridBagConstraint(0, 0, 8, 1));
+        add(pc, DefaultFrame.easyGridBagConstraint(1, 0, 2, 1));
+    }
+
+}
+
Index: JAVATEAMPROJECT/src/dao/ProductDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JAVATEAMPROJECT/src/dao/ProductDAO.java b/JAVATEAMPROJECT/src/dao/ProductDAO.java
new file mode 100644
--- /dev/null	
+++ b/JAVATEAMPROJECT/src/dao/ProductDAO.java	
@@ -0,0 +1,95 @@
+package dao;
+
+import javax.swing.*;
+
+public class ProductDAO{
+    private String name, category, state, code;
+    private int num, sellPrice, originalPrice;
+    private boolean discountCheck;
+    private ImageIcon i;
+
+    public ProductDAO(String code, String name, String category,
+                      int num, boolean discountCheck, int sellPrice,
+                      int originalPrice ,String state){
+        this.code = code;
+        this.name = name;
+        this.category = category;
+        this.num = num;
+        this.discountCheck = discountCheck;
+        this.sellPrice = sellPrice;
+        this.originalPrice = originalPrice;
+        this.state = state;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getCategory() {
+        return category;
+    }
+
+    public void setCategory(String category) {
+        this.category = category;
+    }
+
+    public String getState() {
+        return state;
+    }
+
+    public void setState(String state) {
+        this.state = state;
+    }
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public int getNum() {
+        return num;
+    }
+
+    public void setNum(int num) {
+        this.num = num;
+    }
+
+    public int getSellPrice() {
+        return sellPrice;
+    }
+
+    public void setSellPrice(int sellPrice) {
+        this.sellPrice = sellPrice;
+    }
+
+    public int getOriginalPrice() {
+        return originalPrice;
+    }
+
+    public void setOriginalPrice(int originalPrice) {
+        this.originalPrice = originalPrice;
+    }
+
+    public boolean isDiscountCheck() {
+        return discountCheck;
+    }
+
+    public void setDiscountCheck(boolean discountCheck) {
+        this.discountCheck = discountCheck;
+    }
+
+    public ImageIcon getI() {
+        return i;
+    }
+
+    public void setI(ImageIcon i) {
+        this.i = i;
+    }
+}
